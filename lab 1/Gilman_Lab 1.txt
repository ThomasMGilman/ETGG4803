Crossing Bridge Problem:

1.) in the case of 4 people having to cross the bridge. To brute force the problem would lead to 15 possible solutions.
 The reason being is that you must choose two from the left side of the bridge, and must choose only one from the other side once crossed.
 This is because they can only travel in pairs of two and no more, and it would be pointless to send one person as one person needs to bring the flashlight back across. 
 The order follows as so 4choose2, 2choose1, 3choose2, 3choose1, 2choose2 = 6 + 2 + 3 + 3 + 1 = 15 combinations.
 
3.) The method i used for finding the minimum time to get across the bridge with 4 people was the brute force approach.
The method trys every possible combination, and keeps tack of which is the fastest pattern so far and the time it took.
This will always give the right answer, however it is not very efficient.
To make the solution a bit more optimal, i multithreaded the process to increase the speed of the program.
Other ways that could simplify this solution would be to prune some of the patterns if they are being repeated but in a different order.
Also in order to accept n number of people, the solution will need to queue thread tasks and start one when ever the max number of threads currently working hasnt been reached yet.
And recursion wont work as it would cause a stackoverflow with the number of possibilities and branches if n gets to large.